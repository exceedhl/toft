#!/bin/bash

if [ $# -eq 0 ]; then
	echo "Usage: `basename $0` <centos-6>"
	exit 1
fi

username=`id -nu`	
if [ ! "$username" = "root" ]; then
	echo "This command has to be run as root!"
	exit 1
fi

cache="/var/cache/lxc"
suite=$1

arch=$(arch)
if [ "$arch" == "x86_64" ]; then
    arch=amd64
fi

if [ "$arch" == "i686" ]; then
    arch=i386
fi

if [ -e "$cache/$suite-$arch.tar.gz" ]; then
	echo "Cache rootfs already exists!"
	exit 0
fi

# clean the cache dir
rm -rf $cache/$suite-$arch
mkdir -p $cache/$suite-$arch

# install latest rinse
if [ -f /etc/redhat-release ]; then # on centos
  yum install -y perl perl-CPAN perl-libwww-perl 
fi
if [[ ! `type rinse` ]]; then
	echo "Rinse does not exist. Installing..."
	(cd /tmp && \
	wget http://www.steve.org.uk/Software/rinse/rinse-1.9.1.tar.gz && \
	tar zxf rinse-1.9.1.tar.gz && \
	cd rinse-1.9.1 && \
	make install)
fi

# create centos image using rinse
epel_arch=$arch
if [ "$arch" == "amd64" ]; then
    epel_arch="x86_64"
fi
cat <<EOF > /tmp/after_post_install
## chef rpms
chroot $cache/$suite-$arch rpm -Uvh http://rbel.co/rbel6
## ruby-shadow and other libs that puppet requires
chroot $cache/$suite-$arch rpm -Uvh http://download.fedoraproject.org/pub/epel/6/$epel_arch/epel-release-6-5.noarch.rpm
## puppet repo
cat <<EOFF > $cache/$suite-$arch/etc/yum.repos.d/puppet.repo
[puppetlabs]
name=Puppet Labs Packages
baseurl=http://yum.puppetlabs.com/el/\\\$releasever/products/\\\$basearch/
enabled=1
gpgcheck=1
gpgkey=http://yum.puppetlabs.com/RPM-GPG-KEY-puppetlabs

[puppetlabs-deps]
name=Puppet Labs Packages Dependency
baseurl=http://yum.puppetlabs.com/el/\\\$releasever/dependencies/\\\$basearch/
enabled=1
gpgcheck=1
gpgkey=http://yum.puppetlabs.com/RPM-GPG-KEY-puppetlabs
EOFF
chroot $cache/$suite-$arch yum -y install tar man sudo bind-utils openssh-server openssh-clients rubygem-chef puppet
chroot $cache/$suite-$arch yum clean all
EOF
chmod +x /tmp/after_post_install

echo "Creating $suite-$arch image"
rinse --config /etc/rinse/rinse.conf \
	--arch=$arch --distribution=$suite \
	--directory=$cache/$suite-$arch \
	--after-post-install=/tmp/after_post_install

# compress root image
echo "Packaging rootfs ..."
(cd $cache/$suite-$arch && tar --exclude=$suite-$arch.tar.gz -zcf $suite-$arch.tar.gz .)
mv $cache/$suite-$arch/$suite-$arch.tar.gz $cache
